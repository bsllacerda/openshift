
pipeline {
    agent {
      node {
          label 'nodejs' 
      }
    }
    options {
      timeout(time: 20, unit: 'MINUTES') 
    }
    stages {
        stage('Verify Project') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                            echo "Using the project: ${openshift.project()}"
                        }
                    }
                }
            }
        }
        stage('build') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                            echo "Starting Build: ${NAME}"
                            def bld = openshift.startBuild('${NAME}')
                            bld.untilEach {
                                 echo "UntilEach: ${NAME}"
                                return it.object().status.phase == "Running"
                            }
                            echo "Logs: ${NAME}"
                            bld.logs('-f')
                        }  
                    }
                }
            }
        }
        stage('deploy') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                            // def dc = openshift.selector('dc', '${NAME}')
                            // dc.rollout().latest()
                            openshift.selector("dc", '${NAME}').related('pods').untilEach(2) {
                                return (it.object().status.phase == "Running")
                            }
                        }
                    }
                }
            }
        }
    }
}